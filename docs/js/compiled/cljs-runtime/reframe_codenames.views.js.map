{"version":3,"sources":["reframe_codenames/views.cljs"],"mappings":"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","names":["reframe-codenames.views/rules","reframe-codenames.views/header-rules","js/module$node_modules$react_bootstrap$cjs$index.Accordion","js/module$node_modules$react_bootstrap$cjs$index.Card","js/module$node_modules$react_bootstrap$cjs$Accordion.Toggle","js/module$node_modules$react_bootstrap$cjs$Card.Header","js/module$node_modules$react_bootstrap$cjs$Accordion.Collapse","js/module$node_modules$react_bootstrap$cjs$Card.Body","cljs.core.map_indexed","index","rule","reframe-codenames.views/grid-row","row-index","items","spy-master?","disable?","js/module$node_modules$react_bootstrap$cjs$index.Row","col-index","item","open?","or__4126__auto__","color","js/module$node_modules$react_bootstrap$cjs$index.Col","js/module$node_modules$react_bootstrap$cjs$index.Button","cljs.core.update","_","cljs.core/identity","re-frame.core/dispatch","reframe-codenames.views/grid","board-tiles","cljs.core.partition","p1__44493#","p2__44494#","reframe-codenames.views/main-panel","cljs.core/deref","p1__44497#","p1__44498#","re_frame.core.subscribe","turn","red-left","p1__44495#","cljs.core.filter","cljs.core/not","cljs.core._EQ_","cljs.core/count","blue-left","p1__44496#","turn-over?","hint","limit","message","js/module$node_modules$react_bootstrap$cjs$index.Container","js/module$node_modules$react_bootstrap$cjs$index.InputGroup","js/module$node_modules$react_bootstrap$cjs$InputGroup.Prepend","js/module$node_modules$react_bootstrap$cjs$InputGroup.Text","js/module$node_modules$react_bootstrap$cjs$index.FormControl","js/module$node_modules$react_bootstrap$cjs$InputGroup.Append","js/module$node_modules$react_bootstrap$cjs$index.Badge","js/module$node_modules$react_bootstrap$cjs$index.ButtonGroup","js/module$node_modules$react_bootstrap$cjs$Card.Footer","js/module$node_modules$react_social_icons$dist$react_social_icons.SocialIcon"],"sourcesContent":["(ns reframe-codenames.views\n  (:require\n    [re-frame.core :as re-frame]\n    [re-com.core :as re-com]\n    [reframe-codenames.subs :as subs]\n    [clojure.string :refer [join]]\n    [reframe-codenames.events :as events])\n  (:require\n    [\"react-bootstrap\"\n     :refer\n     [Card\n      Button\n      ButtonGroup\n      ListGroup\n      Row\n      Col\n      Badge\n      Container\n      Jumbotron\n      ToggleButton\n      Accordion\n      Form\n      FormControl\n      InputGroup]]\n    [\"react-bootstrap/Card\" :refer [Text Body Header Footer Title Subtitle]]\n    [\"react-bootstrap/ListGroup\" :refer [Item]]\n    [\"react-bootstrap/Accordion\"\n     :refer  [Toggle Collapse]\n     :rename {Toggle   AccToggle\n              Collapse AccCollapse}]\n    [\"react-bootstrap/InputGroup\"\n     :refer  [Text Prepend Append]\n     :rename {Text    IGText\n              Prepend IGPrepend\n              Append  IGAppend}]\n    [\"react-social-icons\" :refer [SocialIcon]]))\n\n(def rules [\"Have 2 teams, one \\\"red\\\" (first turn) and the other blue.\"\n            \"Choose a person randomly from each team as a spy-master, only he/she can use the spy-master button and see the color of all the words\"\n            \"The spy master gives a \\\"single\\\" word as a hint and and a number (say 3).\"\n            \"Then his/her team members choose/open different words (max 3, the number given by their spy master). Their turn gets over as soon as the team uncover any word of different color that their own team or they voluntarily end their turn.\"\n            \"Goal of each team is to finish up their color words.\"\n            \"There are 9 reds (first-turn), 8 blues, 7 greys (civilians) and one back (assassin) words.\"\n            \"A team instantly loses if they uncover a black (assassin) word.\"])\n\n(defn header-rules []\n  [:>\n   Accordion\n   {:defaultActiveKey \"0\"}\n   [:>\n    Card\n    [:>\n     AccToggle\n     {:as Header :eventKey \"0\"}\n     [:h4 \"Rules\"]]\n    [:>\n     AccCollapse\n     {:eventKey \"0\"}\n     [:>\n      Body\n      (map-indexed\n       (fn [index rule] [:p {:style {:text-align :left}} (str (inc index) \". \" rule)])\n       rules)]]]])\n\n(defn grid-row [row-index items spy-master? disable?]\n  [:>\n   Row\n   {:key (str \"grid-row-\" row-index) :class-name :justify-content-md-center}\n   (map-indexed\n    (fn [col-index item]\n      (let [open? (or (:open? item) spy-master?)\n            color (:color item)]\n        [:>\n         Col\n         {:key   (str \"grid-cell-\" (+ (* row-index 5) col-index))\n          :sm    2\n          :xs    2\n          :style {:margin 5 :padding 0}}\n         [:>\n          Button\n          {:class    [:board-grid-btn]\n           :variant  :light\n           :style    (update\n                      {:border-radius   2\n                       :padding         5\n                       :width           \"100%\"\n                       :height          \"10vmin\"\n                       :justify-content :center\n                       :font-size       \"2.5vmin\"}\n                      :color (if open? (fn [_] color) identity))\n           :disabled (or open? disable?)\n           :size     :sm\n           :on-click #(re-frame/dispatch [::events/open-tile row-index col-index])}\n          (:word item)]]))\n    items)])\n\n(defn grid [board-tiles spy-master? disable?]\n  (->> (partition 5 board-tiles)\n       (map-indexed\n        #(grid-row %1 %2 spy-master? disable?))))\n\n(defn main-panel []\n  (let [spy-master?  @(re-frame/subscribe [::subs/spy-master?])\n        board-tiles  @(re-frame/subscribe [::subs/board])\n        turn         @(re-frame/subscribe [::subs/turn])\n        red-left     (->> board-tiles\n                          (filter\n                           #(and\n                             (not (:open? %))\n                             (= :red (:color %))))\n                          (count))\n        blue-left    (->> board-tiles\n                          (filter\n                           #(and\n                             (not (:open? %))\n                             (= :blue (:color %))))\n                          (count))\n        turn-over?   @(re-frame/subscribe [::subs/turn-over?])\n        hint         @(re-frame/subscribe [::subs/hint])\n        limit        @(re-frame/subscribe [::subs/limit])\n        message      @(re-frame/subscribe [::subs/message])]\n    [:>\n     Card\n     {:style {:border-radius 10 :margin 5}}\n     [:>\n      Header\n      [:h1 {:style {:background-color :gold :padding 10}} \"Codenames Game\"]\n      (header-rules)]\n     [:>\n      Body\n      {:style {:background-color (if spy-master? :black :lavender)}}\n      [:>\n       Container\n       {:style {:padding 10}}\n       [:>\n        Row\n        {:fluid :true :style {:margin 10} :class-name :justify-content-md-center}\n        [:>\n         Col\n         {:sm 12}\n         [:>\n          InputGroup\n          {:size :lg}\n          [:>\n           IGPrepend\n           [:>\n            IGText\n            \"Hint\"]]\n          [:>\n           FormControl\n           {:disabled  (or (not spy-master?) turn-over?)\n            :on-change #(re-frame/dispatch [::events/set-hint (-> % .-target .-value)])\n            :value     hint}]\n          [:>\n           IGAppend\n           [:>\n            IGText\n            \"Limit\"]]\n          [:>\n           FormControl\n           {:disabled  (or (not spy-master?) turn-over?)\n            :on-change #(re-frame/dispatch [::events/set-limit (-> % .-target .-value)])\n            :value     limit}]]]]\n       [:>\n        Row\n        {:fluid :true :style {:margin 5} :class-name :justify-content-md-center}\n        [:>\n         Col\n         {:sm 4}\n         [:h2 [:> Badge {:variant :danger} (str \"Reds left:\" red-left)]]]\n        [:>\n         Col\n         {:sm 4}\n         [:h4\n          [:>\n           Badge\n           {:variant (:status message) :style {:color :white}}\n           (:text message)]]]\n        [:>\n         Col\n         {:sm 4}\n         [:h2 [:> Badge {:variant :primary} (str \"Blues left:\" blue-left)]]]]\n       (grid board-tiles spy-master? turn-over?)\n       [:>\n        Row\n        {:class-name :justify-content-md-center}\n        [:>\n         Col\n         {:sm 12}\n         [:>\n          ButtonGroup\n          {:fluid :true :vertical :true :style {:margin 5}}\n          [:>\n           Button\n           {:variant :warning :on-click #(re-frame/dispatch [::events/toggle-spy-master])}\n           \"Spy Master\"]\n          (if spy-master?\n            [:>\n             Button\n             {:disabled (not spy-master?)\n              :variant  (if spy-master?\n                          :secondary\n                          :dark)\n              :on-click #(re-frame/dispatch [::events/toggle-turn])}\n             \"Toggle Turn\"])]]]\n       [:>\n        Row\n        [:>\n         Col\n         {:sm 12}\n         [:>\n          Button\n          {:fluid    true\n           :variant  :success\n           :style    {:margin 5}\n           :on-click #(re-frame/dispatch [::events/initialize-db])}\n          \"New Game\"]]]]]\n     [:>\n      Footer\n      [:p {:class-name :text-muted} \"Creator: Lalit Prakash Vatsal\"]\n      [:>\n       SocialIcon\n       {:url \"https://twitter.com/lprakashv\" :label :twitter}]\n      [:>\n       SocialIcon\n       {:url \"https://medium.com/@lprakashv\" :label :medium}]\n      [:>\n       SocialIcon\n       {:url \"https://www.linkedin.com/in/lalit-vatsal-ab921879/\" :label :linkedin}]\n      [:>\n       SocialIcon\n       {:url \"https://github.com/lprakashv\" :label :github}]]]))\n"]}