shadow$provide.module$node_modules$react_bootstrap$cjs$AbstractNavItem=function(global,require,module,exports){global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports.default=void 0;var _extends2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=_interopRequireDefault(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),
_classnames=_interopRequireDefault(require("module$node_modules$classnames$index")),_react=global(require("module$node_modules$react$index")),_useEventCallback=_interopRequireDefault(require("module$node_modules$$restart$hooks$cjs$useEventCallback")),_warning=_interopRequireDefault(require("module$node_modules$warning$warning")),_NavContext=_interopRequireDefault(require("module$node_modules$react_bootstrap$cjs$NavContext")),_SelectableContext=global(require("module$node_modules$react_bootstrap$cjs$SelectableContext"));
require=_react.default.forwardRef(function(_ref,ref){var active=_ref.active,className=_ref.className,tabIndex=_ref.tabIndex,eventKey=_ref.eventKey,onSelect=_ref.onSelect,onClick=_ref.onClick,Component=_ref.as;_ref=(0,_objectWithoutPropertiesLoose2.default)(_ref,"active className tabIndex eventKey onSelect onClick as".split(" "));var navKey=(0,_SelectableContext.makeEventKey)(eventKey,_ref.href),parentOnSelect=(0,_react.useContext)(_SelectableContext.default);eventKey=(0,_react.useContext)(_NavContext.default);
var isActive=active;if(eventKey){_ref.role||"tablist"!==eventKey.role||(_ref.role="tab");isActive=eventKey.getControllerId(navKey);var contextControlledId=eventKey.getControlledId(navKey);(0,_warning.default)(!isActive||!_ref.id,"[react-bootstrap] The provided id '"+_ref.id+"' was overwritten by the current navContext with '"+isActive+"'.");(0,_warning.default)(!contextControlledId||!_ref["aria-controls"],"[react-bootstrap] The provided aria-controls value '"+_ref["aria-controls"]+"' was overwritten by the current navContext with '"+
contextControlledId+"'.");_ref["data-rb-event-key"]=navKey;_ref.id=isActive||_ref.id;_ref["aria-controls"]=contextControlledId||_ref["aria-controls"];isActive=null==active&&null!=navKey?eventKey.activeKey===navKey:active}"tab"===_ref.role&&(_ref.tabIndex=isActive?tabIndex:-1,_ref["aria-selected"]=isActive);active=(0,_useEventCallback.default)(function(e){onClick&&onClick(e);null!=navKey&&(onSelect&&onSelect(navKey,e),parentOnSelect&&parentOnSelect(navKey,e))});return _react.default.createElement(Component,
(0,_extends2.default)({},_ref,{ref:ref,onClick:active,className:(0,_classnames.default)(className,isActive&&"active")}))});require.defaultProps={disabled:!1};exports.default=require;module.exports=exports["default"]}
//# sourceMappingURL=module$node_modules$react_bootstrap$cjs$AbstractNavItem.js.map
