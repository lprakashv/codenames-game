shadow$provide.module$node_modules$react_overlays$cjs$Dropdown=function(global,require,module,exports){function Dropdown(_ref){var drop=_ref.drop,alignEnd=_ref.alignEnd,defaultShow=_ref.defaultShow,rawShow=_ref.show,rawOnToggle=_ref.onToggle,_ref$itemSelector=_ref.itemSelector,itemSelector=void 0===_ref$itemSelector?"* \x3e *":_ref$itemSelector,focusFirstItemOnShow=_ref.focusFirstItemOnShow;_ref=_ref.children;var forceUpdate=(0,_useForceUpdate["default"])();defaultShow=(0,_uncontrollable.useUncontrolledProp)(rawShow,
defaultShow,rawOnToggle);var show=defaultShow[0],onToggle=defaultShow[1];defaultShow=(0,_useCallbackRef2["default"])();var toggleElement=defaultShow[0],setToggle=defaultShow[1],menuRef=(0,_react.useRef)(null),menuElement=menuRef.current,setMenu=(0,_react.useCallback)(function(ref){menuRef.current=ref;forceUpdate()},[forceUpdate]);defaultShow=(0,_usePrevious["default"])(show);var lastSourceEvent=(0,_react.useRef)(null),focusInDropdown=(0,_react.useRef)(!1),toggle=(0,_react.useCallback)(function(event){onToggle(!show,
event)},[onToggle,show]);rawShow=(0,_react.useMemo)(function(){return{toggle:toggle,drop:drop,show:show,alignEnd:alignEnd,menuElement:menuElement,toggleElement:toggleElement,setMenu:setMenu,setToggle:setToggle}},[toggle,drop,show,alignEnd,menuElement,toggleElement,setMenu,setToggle]);menuElement&&defaultShow&&!show&&(focusInDropdown.current=menuElement.contains(document.activeElement));var focusToggle=(0,_useEventCallback["default"])(function(){toggleElement&&toggleElement.focus&&toggleElement.focus()}),
maybeFocusFirst=(0,_useEventCallback["default"])(function(){var type=lastSourceEvent.current,focusType=focusFirstItemOnShow;null==focusType&&(focusType=menuRef.current&&(0,_matches["default"])(menuRef.current,"[role\x3dmenu]")?"keyboard":!1);!1===focusType||"keyboard"===focusType&&!/^key.+$/.test(type)||(type=(0,_querySelectorAll["default"])(menuRef.current,itemSelector)[0])&&type.focus&&type.focus()});(0,_react.useEffect)(function(){show?maybeFocusFirst():focusInDropdown.current&&(focusInDropdown.current=
!1,focusToggle())},[show,focusInDropdown,focusToggle,maybeFocusFirst]);(0,_react.useEffect)(function(){lastSourceEvent.current=null});var getNextFocusedChild=function(current,offset){if(!menuRef.current)return null;var items=(0,_querySelectorAll["default"])(menuRef.current,itemSelector);current=items.indexOf(current)+offset;current=Math.max(0,Math.min(current,items.length));return items[current]};return _react["default"].createElement(_DropdownContext["default"].Provider,{value:rawShow},_ref({props:{onKeyDown:function(event){var key=
event.key,target=event.target;if(!/input|textarea/i.test(target.tagName)||!(" "===key||"Escape"!==key&&menuRef.current&&menuRef.current.contains(target)))switch(lastSourceEvent.current=event.type,key){case "ArrowUp":(key=getNextFocusedChild(target,-1))&&key.focus&&key.focus();event.preventDefault();break;case "ArrowDown":event.preventDefault();show?(event=getNextFocusedChild(target,1))&&event.focus&&event.focus():toggle(event);break;case "Escape":case "Tab":onToggle(!1,event)}}}}))}global=require("module$node_modules$$babel$runtime$helpers$interopRequireWildcard");
var _interopRequireDefault=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");exports.__esModule=!0;exports["default"]=void 0;var _matches=_interopRequireDefault(require("module$node_modules$dom_helpers$cjs$matches")),_querySelectorAll=_interopRequireDefault(require("module$node_modules$dom_helpers$cjs$querySelectorAll")),_react=global(require("module$node_modules$react$index")),_propTypes=_interopRequireDefault(require("module$node_modules$prop_types$index")),_uncontrollable=
require("module$node_modules$uncontrollable$lib$cjs$index"),_usePrevious=_interopRequireDefault(require("module$node_modules$$restart$hooks$cjs$usePrevious")),_useCallbackRef2=_interopRequireDefault(require("module$node_modules$$restart$hooks$cjs$useCallbackRef")),_useForceUpdate=_interopRequireDefault(require("module$node_modules$$restart$hooks$cjs$useForceUpdate")),_useEventCallback=_interopRequireDefault(require("module$node_modules$$restart$hooks$cjs$useEventCallback")),_DropdownContext=_interopRequireDefault(require("module$node_modules$react_overlays$cjs$DropdownContext"));
global=_interopRequireDefault(require("module$node_modules$react_overlays$cjs$DropdownMenu"));require=_interopRequireDefault(require("module$node_modules$react_overlays$cjs$DropdownToggle"));_interopRequireDefault={children:_propTypes["default"].func.isRequired,drop:_propTypes["default"].oneOf(["up","left","right","down"]),focusFirstItemOnShow:_propTypes["default"].oneOf([!1,!0,"keyboard"]),itemSelector:_propTypes["default"].string,alignEnd:_propTypes["default"].bool,show:_propTypes["default"].bool,
defaultShow:_propTypes["default"].bool,onToggle:_propTypes["default"].func};Dropdown.displayName="ReactOverlaysDropdown";Dropdown.propTypes=_interopRequireDefault;Dropdown.Menu=global["default"];Dropdown.Toggle=require["default"];exports["default"]=Dropdown;module.exports=exports.default}
//# sourceMappingURL=module$node_modules$react_overlays$cjs$Dropdown.js.map
